"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7605],{6010:(r,e,l)=>{l.r(e),l.d(e,{data:()=>n});const n={key:"v-293700c1",path:"/coding/Java/",title:"Java",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"链接",slug:"链接",children:[{level:3,title:"教程",slug:"教程",children:[]},{level:3,title:"下载",slug:"下载",children:[]}]},{level:2,title:"推荐阅读",slug:"推荐阅读",children:[]},{level:2,title:"配置环境变量",slug:"配置环境变量",children:[{level:3,title:"Windows 10",slug:"windows-10",children:[]}]},{level:2,title:"构建工具",slug:"构建工具",children:[{level:3,title:"Apache Maven",slug:"apache-maven",children:[]},{level:3,title:"Apache Ant",slug:"apache-ant",children:[]},{level:3,title:"Gradle",slug:"gradle",children:[]}]},{level:2,title:"Spring 框架",slug:"spring-框架",children:[{level:3,title:"Spring 项目",slug:"spring-项目",children:[]}]}],filePathRelative:"coding/Java/README.md",git:{updatedTime:1630372804e3,contributors:[{name:"Yue_plus",email:"Yue_plus@foxmail.com",commits:1}]}}},8981:(r,e,l)=>{l.r(e),l.d(e,{default:()=>st});var n=l(6252),a=l(7355),i=l(4426),t=l(5098),o=l(8693);const s=(0,n.uE)('<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的高级程序设计语言。</li><li>Java 可运行于多个平台，如 Windows, Mac OS 及其他多种 UNIX 版本的系统。</li><li>本教程通过简单的实例将让大家更好的了解 Java 编程语言。</li><li>移动操作系统 Android 大部分的代码采用 Java 编程语言编程。</li></ul></div><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2><h3 id="教程" tabindex="-1"><a class="header-anchor" href="#教程" aria-hidden="true">#</a> 教程</h3>',4),p={href:"https://www.runoob.com/java/java-tutorial.html",target:"_blank",rel:"noopener noreferrer"},u=(0,n.Uk)("Java 教程 - 菜鸟教程"),g={href:"https://www.liaoxuefeng.com/wiki/1252599548343744",target:"_blank",rel:"noopener noreferrer"},_=(0,n.Uk)("Java 教程 - 廖雪峰的官方网站"),c=(0,n._)("h3",{id:"下载",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#下载","aria-hidden":"true"},"#"),(0,n.Uk)(" 下载")],-1),k={href:"http://openjdk.java.net/",target:"_blank",rel:"noopener noreferrer"},h=(0,n.Uk)("OpenJDK"),d={href:"https://openjfx.cn/",target:"_blank",rel:"noopener noreferrer"},m=(0,n.Uk)("OpenJFX (JavaFX) 中文网"),S=(0,n._)("h2",{id:"推荐阅读",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),(0,n.Uk)(" 推荐阅读")],-1),b={href:"https://book.douban.com/subject/34898994/",target:"_blank",rel:"noopener noreferrer"},f=(0,n.Uk)("《Java核心技术·卷 I 》（原书第11版）"),U=(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("img",{src:"/img/book/《Java核心技术-卷1》.jpg",alt:"《Java核心技术-卷1》"})])],-1),v={href:"https://book.douban.com/subject/34935138/",target:"_blank",rel:"noopener noreferrer"},W=(0,n.Uk)("《Java核心技术·卷 II》（原书第11版）"),A=(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("img",{src:"/img/book/《Java核心技术-卷2》.jpg",alt:"《Java核心技术-卷2》"})])],-1),w=(0,n._)("h2",{id:"配置环境变量",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#配置环境变量","aria-hidden":"true"},"#"),(0,n.Uk)(" 配置环境变量")],-1),P=(0,n._)("h3",{id:"windows-10",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#windows-10","aria-hidden":"true"},"#"),(0,n.Uk)(" Windows 10")],-1),D=(0,n.Uk)("前往 "),j={href:"http://openjdk.java.net/",target:"_blank",rel:"noopener noreferrer"},J=(0,n.Uk)("OpenJDK 官网"),M=(0,n.Uk)(" 下载 JDK。"),C=(0,n._)("p",null,[(0,n._)("img",{src:a,alt:"下载 JDK"})],-1),y=(0,n._)("li",null,[(0,n._)("p",null,[(0,n.Uk)("配置 "),(0,n._)("strong",null,"环境变量"),(0,n.Uk)("：")]),(0,n._)("p",null,[(0,n._)("img",{src:i,alt:"新建/修改 环境变量"})]),(0,n._)("p",null,"添加以下环境变量："),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("code",null,"JAVA_HOME"),(0,n.Uk)(" : "),(0,n._)("code",null,"<JDK 解压路径>")]),(0,n._)("li",null,[(0,n._)("code",null,"CLASSPATH"),(0,n.Uk)(" : "),(0,n._)("code",null,".;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;")])]),(0,n._)("p",null,[(0,n.Uk)("编辑 "),(0,n._)("code",null,"Path"),(0,n.Uk)(" 变量：")]),(0,n._)("p",null,[(0,n._)("img",{src:t,alt:"编辑 Path 变量"})]),(0,n._)("p",null,[(0,n.Uk)("点击 "),(0,n._)("code",null,"新建"),(0,n.Uk)("，添加：")]),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("code",null,"%JAVA_HOME%\\bin")]),(0,n._)("li",null,[(0,n._)("code",null,"%JAVA_HOME%\\jre\\bin")])])],-1),T=(0,n._)("li",null,[(0,n._)("p",null,[(0,n.Uk)("输入 "),(0,n._)("code",null,"java -version"),(0,n.Uk)(" 验证配置。")]),(0,n._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,n._)("pre",{class:"language-bash"},[(0,n._)("code",null,[(0,n.Uk)("$ java -version\nopenjdk version "),(0,n._)("span",{class:"token string"},'"15.0.1"'),(0,n.Uk)(),(0,n._)("span",{class:"token number"},"2020"),(0,n.Uk)("-10-20\nOpenJDK Runtime Environment "),(0,n._)("span",{class:"token punctuation"},"("),(0,n.Uk)("build "),(0,n._)("span",{class:"token number"},"15.0"),(0,n.Uk)(".1+9-18"),(0,n._)("span",{class:"token punctuation"},")"),(0,n.Uk)("\nOpenJDK "),(0,n._)("span",{class:"token number"},"64"),(0,n.Uk)("-Bit Server VM "),(0,n._)("span",{class:"token punctuation"},"("),(0,n.Uk)("build "),(0,n._)("span",{class:"token number"},"15.0"),(0,n.Uk)(".1+9-18, mixed mode, sharing"),(0,n._)("span",{class:"token punctuation"},")"),(0,n.Uk)("\n")])]),(0,n._)("div",{class:"highlight-lines"},[(0,n._)("div",{class:"highlight-line"}," "),(0,n._)("br"),(0,n._)("br"),(0,n._)("br")]),(0,n._)("div",{class:"line-numbers"},[(0,n._)("span",{class:"line-number"},"1"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"2"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"3"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"4"),(0,n._)("br")])])],-1),E=(0,n._)("h2",{id:"构建工具",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#构建工具","aria-hidden":"true"},"#"),(0,n.Uk)(" 构建工具")],-1),O=(0,n._)("h3",{id:"apache-maven",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#apache-maven","aria-hidden":"true"},"#"),(0,n.Uk)(" Apache Maven")],-1),x={class:"custom-container tip"},I=(0,n._)("p",{class:"custom-container-title"},"TIP",-1),R=(0,n._)("p",null,"Maven 是流行的 Java 项目构建系统，Maven 项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。",-1),H={href:"https://maven.apache.org/",target:"_blank",rel:"noopener noreferrer"},L=(0,n.Uk)("Apache Maven 官网"),F={href:"https://www.w3cschool.cn/maven/",target:"_blank",rel:"noopener noreferrer"},V=(0,n.Uk)("Maven 教程_w3cschool"),B=(0,n._)("h4",{id:"将-maven-项目转换为-gradle-项目",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#将-maven-项目转换为-gradle-项目","aria-hidden":"true"},"#"),(0,n.Uk)(" 将 Maven 项目转换为 Gradle 项目")],-1),X=(0,n.Uk)("参考 "),K={href:"https://docs.gradle.org/current/userguide/migrating_from_maven.html#migmvn:automatic_conversion",target:"_blank",rel:"noopener noreferrer"},G=(0,n.Uk)("执行自动转换"),z=(0,n.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>gradle init --type pom\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="apache-ant" tabindex="-1"><a class="header-anchor" href="#apache-ant" aria-hidden="true">#</a> Apache Ant</h3>',2),Q={class:"custom-container tip"},q=(0,n._)("p",{class:"custom-container-title"},"TIP",-1),N=(0,n._)("p",null,"Apache Ant，是一个将软件编译、测试、部署等步骤联系在一起加以自动化的一个工具，大多用于 Java 环境中的软件开发。",-1),Y={href:"https://ant.apache.org/",target:"_blank",rel:"noopener noreferrer"},Z=(0,n.Uk)("Apache Ant 官网"),$={href:"https://www.w3cschool.cn/ant/",target:"_blank",rel:"noopener noreferrer"},rr=(0,n.Uk)("Apache Ant 教程_w3cschool"),er=(0,n._)("h3",{id:"gradle",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#gradle","aria-hidden":"true"},"#"),(0,n.Uk)(" Gradle")],-1),lr={class:"custom-container tip"},nr=(0,n._)("p",{class:"custom-container-title"},"TIP",-1),ar=(0,n._)("p",null,"Gradle 是一个基于 Apache Ant 与 Apache Maven 概念的项目自动化构建开源工具。",-1),ir={href:"https://gradle.org/",target:"_blank",rel:"noopener noreferrer"},tr=(0,n.Uk)("Gradle 官网"),or={href:"https://www.w3cschool.cn/gradle/",target:"_blank",rel:"noopener noreferrer"},sr=(0,n.Uk)("Gradle 教程_w3cschool"),pr=(0,n._)("h4",{id:"gradle-配置",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#gradle-配置","aria-hidden":"true"},"#"),(0,n.Uk)(" Gradle 配置")],-1),ur=(0,n.Uk)("可以使用 "),gr={href:"https://developer.aliyun.com/mirror/maven",target:"_blank",rel:"noopener noreferrer"},_r=(0,n.Uk)("阿里巴巴开源镜像站 - Maven 镜像"),cr=(0,n.Uk)("。"),kr=(0,n.uE)('<p><code>build.gradle.kts</code> 配置示例：</p><div class="language-kts ext-kts line-numbers-mode"><pre class="language-kts"><code>repositories <span class="token punctuation">{</span>\n    maven <span class="token punctuation">{</span> <span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://maven.aliyun.com/repository/public/&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n    maven <span class="token punctuation">{</span> <span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://maven.aliyun.com/repository/spring/&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',2),hr=(0,n._)("p",null,"配置 Gradle 网络代理",-1),dr=(0,n.Uk)("参考 "),mr={href:"https://docs.gradle.org/current/userguide/build_environment.html#sec:accessing_the_web_via_a_proxy",target:"_blank",rel:"noopener noreferrer"},Sr=(0,n.Uk)("配置构建环境"),br=(0,n._)("p",null,[(0,n.Uk)("可以在 "),(0,n._)("code",null,"GRADLE_USER_HOME"),(0,n.Uk)("、项目根目录下、Gradle 安装目录下，创建 "),(0,n._)("code",null,"gradle.properties"),(0,n.Uk)(" 文件：")],-1),fr=(0,n._)("p",null,"配置 HTTP 代理：",-1),Ur=(0,n._)("div",{class:"language-properties ext-properties line-numbers-mode"},[(0,n._)("pre",{class:"language-properties"},[(0,n._)("code",null,[(0,n._)("span",{class:"token attr-name"},"systemProp.http.proxyHost"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"www.somehost.org"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.http.proxyPort"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"8080"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.http.proxyUser"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"userid"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.http.proxyPassword"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"password"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.http.nonProxyHosts"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"*.nonproxyrepos.com|localhost"),(0,n.Uk)("\n")])]),(0,n._)("div",{class:"line-numbers"},[(0,n._)("span",{class:"line-number"},"1"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"2"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"3"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"4"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"5"),(0,n._)("br")])],-1),vr=(0,n._)("p",null,"配置 HTTPS 代理：",-1),Wr=(0,n._)("div",{class:"language-properties ext-properties line-numbers-mode"},[(0,n._)("pre",{class:"language-properties"},[(0,n._)("code",null,[(0,n._)("span",{class:"token attr-name"},"systemProp.https.proxyHost"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"www.somehost.org"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.https.proxyPort"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"8080"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.https.proxyUser"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"userid"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.https.proxyPassword"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"password"),(0,n.Uk)("\n"),(0,n._)("span",{class:"token attr-name"},"systemProp.http.nonProxyHosts"),(0,n._)("span",{class:"token punctuation"},"="),(0,n._)("span",{class:"token attr-value"},"*.nonproxyrepos.com|localhost"),(0,n.Uk)("\n")])]),(0,n._)("div",{class:"line-numbers"},[(0,n._)("span",{class:"line-number"},"1"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"2"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"3"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"4"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"5"),(0,n._)("br")])],-1),Ar=(0,n._)("p",null,[(0,n._)("img",{src:o,alt:"Gradle 设置代理"})],-1),wr=(0,n._)("h2",{id:"spring-框架",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#spring-框架","aria-hidden":"true"},"#"),(0,n.Uk)(" Spring 框架")],-1),Pr={class:"custom-container tip"},Dr=(0,n._)("p",{class:"custom-container-title"},"TIP",-1),jr=(0,n._)("ul",null,[(0,n._)("li",null,"Spring 是最受欢迎的企业级 Java 应用程序开发框架，数以百万的来自世界各地的开发人员使用 Spring 框架来创建性能好、易于测试、可重用的代码。"),(0,n._)("li",null,"Spring 框架是一个开源的 Java 平台，它最初是由 Rod Johnson 编写的，并且于 2003 年 6 月首次在 Apache 2.0 许可下发布。"),(0,n._)("li",null,"Spring 是轻量级的框架，其基础版本只有 2 MB 左右的大小。"),(0,n._)("li",null,"Spring 框架的核心特性是可以用于开发任何 Java 应用程序，但是在 Java EE 平台上构建 web 应用程序是需要扩展的。 Spring 框架的目标是使 J2EE 开发变得更容易使用，通过启用基于 POJO 编程模型来促进良好的编程实践。")],-1),Jr={href:"https://spring.io/",target:"_blank",rel:"noopener noreferrer"},Mr=(0,n.Uk)("Spring 官网"),Cr=(0,n._)("h3",{id:"spring-项目",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#spring-项目","aria-hidden":"true"},"#"),(0,n.Uk)(" Spring 项目")],-1),yr={class:"custom-container tip"},Tr=(0,n._)("p",{class:"custom-container-title"},"TIP",-1),Er=(0,n._)("p",null,"从配置到安全性，从 Web 应用程序到大数据——无论应用程序的基础结构需求是什么，都有一个 Spring 项目可以帮助构建。 从小开始并按需使用——Spring是模块化设计的。",-1),Or={href:"https://spring.io/projects",target:"_blank",rel:"noopener noreferrer"},xr=(0,n.Uk)("Spring 项目概览"),Ir={href:"https://spring.io/projects/spring-boot",target:"_blank",rel:"noopener noreferrer"},Rr=(0,n.Uk)("Spring Boot"),Hr=(0,n.uE)(" <strong>【启动】</strong><ul><li>Spring Boot 可以很容易地创建独立的、基于 Spring 的生产级应用程序，只需“启动(boot)”即可。</li><li>对 Spring 平台与第三方库有自己的看法，所以可以毫不费力地开始。 大多数 Spring Boot 应用程序需要最少的 Spring 配置。</li><li>特性： <ul><li>创建独立的 Spring 应用程序</li><li>直接嵌入 Tomcat、Jetty 或 Undertow（无需部署 WAR 文件）</li><li>提供有针对性的“起步”依赖项以简化构建配置</li><li>尽可能自动配置 Spring 与第三方库</li><li>提供可用于生产的功能，例如指标，运行状况检查和外部化配置</li><li>完全没有代码生成，也不需要 XML 配置</li></ul></li></ul>",3),Lr={href:"https://spring.io/projects/spring-framework",target:"_blank",rel:"noopener noreferrer"},Fr=(0,n.Uk)("Spring Framework"),Vr=(0,n.Uk)(),Br=(0,n._)("strong",null,"【框架】",-1),Xr=(0,n._)("li",null,"Spring 框架为现代基于 Java 的企业级应用程序提供了一个全面的编程与配置模型——适用于任何类型的部署平台。",-1),Kr=(0,n._)("li",null,"Spring 的一个关键元素是在应用程序级别的基础架构支持： Spring 专注于企业应用程序的“管道”，以便团队可以专注于应用程序级别的业务逻辑，而不必与特定的部署环境建立不必要的联系。",-1),Gr=(0,n.Uk)("特性： "),zr={href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html",target:"_blank",rel:"noopener noreferrer"},Qr=(0,n.Uk)("核心技术"),qr=(0,n.Uk)("： 依赖项注入、事件、资源、国际化、验证、数据绑定、类型转换、SpEL、AOP。"),Nr={href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/testing.html",target:"_blank",rel:"noopener noreferrer"},Yr=(0,n.Uk)("测试"),Zr=(0,n.Uk)("： 模拟对象、TestContext 框架、Spring MVC 测试、"),$r=(0,n._)("code",null,"WebTestClient",-1),re=(0,n.Uk)("。"),ee={href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/data-access.html",target:"_blank",rel:"noopener noreferrer"},le=(0,n.Uk)("数据访问"),ne=(0,n.Uk)("： 事务、DAO 支持、JDBC、ORM、编组 XML。"),ae={href:"https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html",target:"_blank",rel:"noopener noreferrer"},ie=(0,n.Uk)("Spring MVC"),te=(0,n.Uk)("与 "),oe={href:"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html",target:"_blank",rel:"noopener noreferrer"},se=(0,n.Uk)("Spring WebFlux"),pe=(0,n.Uk)(" Web 框架。"),ue={href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/integration.html",target:"_blank",rel:"noopener noreferrer"},ge=(0,n.Uk)("集成"),_e=(0,n.Uk)("： 远程处理、JMS、JCA、JMX、电子邮件、任务、调度、缓存。"),ce={href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/languages.html",target:"_blank",rel:"noopener noreferrer"},ke=(0,n.Uk)("编程语言"),he=(0,n.Uk)("： Kotlin、Groovy、动态语言。"),de={href:"https://spring.io/projects/spring-data",target:"_blank",rel:"noopener noreferrer"},me=(0,n.Uk)("Spring Data"),Se=(0,n.uE)(" <strong>【数据】</strong><ul><li><p>Spring Data 的任务是为数据访问提供一个熟悉的、一致的、基于 Spring 的编程模型，同时仍然保留底层数据存储的特殊特性。</p></li><li><p>Spring Data 使得数据访问技术、关系型与非关系型数据库、map-reduce 框架以及基于云的数据服务的使用变得容易。 这是一个伞形项目，包含许多特定于给定数据库的子项目。 这些项目是通过与这些令人兴奋的技术背后的许多公司和开发人员一起工作来开发的。</p></li><li><p>特性：</p><ul><li>强大的存储库与自定义对象映射抽象</li><li>从存储库方法名称动态查询</li><li>提供基本属性的实现域基类</li><li>支持透明审核（已创建的、最后更改的）</li><li>集成自定义存储库代码的可能性</li><li>通过 Java 配置与自定义 XML 命名空间轻松进行 Spring 集成</li><li>与 Spring MVC 控制器的高级集成</li><li>实验性支持跨商店持久性</li></ul></li></ul>",3),be={class:"custom-container details"},fe=(0,n._)("summary",null,"Spring Data 模块",-1),Ue=(0,n.Uk)("主要模块 "),ve={href:"https://github.com/spring-projects/spring-data-commons",target:"_blank",rel:"noopener noreferrer"},We=(0,n.Uk)("Spring Data Commons"),Ae=(0,n.Uk)("： 支撑起每个 Spring Data 模块的核心 Spring 概念。"),we={href:"https://spring.io/projects/spring-data-jdbc",target:"_blank",rel:"noopener noreferrer"},Pe=(0,n.Uk)("Spring Data JDBC"),De=(0,n.Uk)("： Spring Data 对 JDBC 的支持。"),je={href:"https://spring.io/projects/spring-data-jdbc-ext",target:"_blank",rel:"noopener noreferrer"},Je=(0,n.Uk)("Spring Data JDBC Ext"),Me=(0,n.Uk)("： 对标准 JDBC 的特定数据库扩展的支持，包括对 Oracle RAC 快速连接故障转移的支持、AQ JMS 支持以及对使用高级数据类型的支持。"),Ce={href:"https://spring.io/projects/spring-data-jpa",target:"_blank",rel:"noopener noreferrer"},ye=(0,n.Uk)("Spring Data JPA"),Te=(0,n.Uk)("： Spring Data 对 JPA 的支持。"),Ee={href:"https://github.com/spring-projects/spring-data-keyvalue",target:"_blank",rel:"noopener noreferrer"},Oe=(0,n.Uk)("Spring Data KeyValue"),xe=(0,n.Uk)("： 基于映射("),Ie=(0,n._)("code",null,"Map",-1),Re=(0,n.Uk)(")与 SPI，可以轻松地为键值存储构建 Spring Data 模块。"),He={href:"https://spring.io/projects/spring-data-ldap",target:"_blank",rel:"noopener noreferrer"},Le=(0,n.Uk)("Spring Data LDAP"),Fe=(0,n.Uk)("： Spring Data 对 "),Ve={href:"https://github.com/spring-projects/spring-ldap",target:"_blank",rel:"noopener noreferrer"},Be=(0,n.Uk)("Spring LDAP"),Xe=(0,n.Uk)(" 的支持。"),Ke={href:"https://spring.io/projects/spring-data-mongodb",target:"_blank",rel:"noopener noreferrer"},Ge=(0,n.Uk)("Spring Data MongoDB"),ze=(0,n.Uk)("： 基于 Spring 的对象文档支持与 MongoDB。"),Qe={href:"https://spring.io/projects/spring-data-redis",target:"_blank",rel:"noopener noreferrer"},qe=(0,n.Uk)("Spring Data Redis"),Ne=(0,n.Uk)("： 轻松配置并从 Spring 应用程序访问 Redis。"),Ye={href:"https://spring.io/projects/spring-data-rest",target:"_blank",rel:"noopener noreferrer"},Ze=(0,n.Uk)("Spring Data REST"),$e=(0,n.Uk)("： 将 Spring Data 导出为超媒体驱动的 RESTful 资源。"),rl={href:"https://spring.io/projects/spring-data-cassandra",target:"_blank",rel:"noopener noreferrer"},el=(0,n.Uk)("Spring Data for Apache Cassandra"),ll=(0,n.Uk)("： 轻松配置并访问 Apache Cassandra 或大规模、高可用性、面向数据的 Spring 应用程序。"),nl={href:"https://spring.io/projects/spring-data-geode",target:"_blank",rel:"noopener noreferrer"},al=(0,n.Uk)("Spring Data for Apache Geode"),il=(0,n.Uk)("： 轻松配置并访问 Apache Geode，以实现高度一致、低延迟、面向数据的 Spring 应用程序。"),tl={href:"https://spring.io/projects/spring-data-gemfire",target:"_blank",rel:"noopener noreferrer"},ol=(0,n.Uk)("Spring Data for Pivotal GemFire"),sl=(0,n.Uk)("： 轻松配置并访问 Pivotal GemFire，以实现高度一致、低延迟/高吞吐量的面向数据的 Spring 应用程序。"),pl=(0,n.Uk)("社区模块 "),ul={href:"https://github.com/aerospike-community/spring-data-aerospike",target:"_blank",rel:"noopener noreferrer"},gl=(0,n.Uk)("Spring Data Aerospike"),_l={href:"https://github.com/arangodb/spring-data",target:"_blank",rel:"noopener noreferrer"},cl=(0,n.Uk)("Spring Data ArangoDB"),kl={href:"https://spring.io/projects/spring-data-couchbase",target:"_blank",rel:"noopener noreferrer"},hl=(0,n.Uk)("Spring Data Couchbase"),dl={href:"https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/cosmos/azure-spring-data-cosmos",target:"_blank",rel:"noopener noreferrer"},ml=(0,n.Uk)("Spring Data Azure Cosmos DB"),Sl={href:"https://github.com/spring-cloud/spring-cloud-gcp",target:"_blank",rel:"noopener noreferrer"},bl=(0,n.Uk)("Spring Data Cloud Datastore"),fl={href:"https://github.com/spring-cloud/spring-cloud-gcp",target:"_blank",rel:"noopener noreferrer"},Ul=(0,n.Uk)("Spring Data Cloud Spanner"),vl={href:"https://github.com/boostchicken/spring-data-dynamodb",target:"_blank",rel:"noopener noreferrer"},Wl=(0,n.Uk)("Spring Data DynamoDB"),Al={href:"https://spring.io/projects/spring-data-elasticsearch",target:"_blank",rel:"noopener noreferrer"},wl=(0,n.Uk)("Spring Data Elasticsearch"),Pl={href:"https://github.com/hazelcast/spring-data-hazelcast",target:"_blank",rel:"noopener noreferrer"},Dl=(0,n.Uk)("Spring Data Hazelcast"),jl=(0,n.Uk)("： 为 Hazelcast 提供 Spring Data 支持。"),Jl={href:"https://github.com/VanRoy/spring-data-jest",target:"_blank",rel:"noopener noreferrer"},Ml=(0,n.Uk)("Spring Data Jest"),Cl=(0,n.Uk)(": 基于 Jest REST 客户端的 Elasticsearch 的 Spring Data 模块。"),yl={href:"https://spring.io/projects/spring-data-neo4j",target:"_blank",rel:"noopener noreferrer"},Tl=(0,n.Uk)("Spring Data Neo4j"),El=(0,n.Uk)("： Neo4j 的基于 Spring 的对象图支持。"),Ol={href:"https://spring.io/projects/spring-data-solr",target:"_blank",rel:"noopener noreferrer"},xl=(0,n.Uk)("Spring Data for Apache Solr"),Il=(0,n.Uk)("： 轻松配置并为面向搜索的 Spring 应用程序访问Apache Solr。"),Rl={href:"https://spring.io/projects/spring-vault/",target:"_blank",rel:"noopener noreferrer"},Hl=(0,n.Uk)("Spring Data Vault"),Ll=(0,n.Uk)("： 基于 "),Fl={href:"https://github.com/spring-projects/spring-data-keyvalue",target:"_blank",rel:"noopener noreferrer"},Vl=(0,n.Uk)("Spring Data KeyValue"),Bl=(0,n.Uk)(" 构建的保管库。"),Xl={href:"https://spring.io/projects/spring-cloud",target:"_blank",rel:"noopener noreferrer"},Kl=(0,n.Uk)("Spring Cloud"),Gl=(0,n.uE)(" <strong>【云】</strong><ul><li>Spring Cloud 为开发人员提供了工具，以快速构建分布式系统中的某些常见模式 （例如：配置管理、服务发现、断路器、智能路由、微代理、控制总线、一次性令牌、全局锁、领导选举、分布式会话、群集状态）。 分布式系统的协调导致了样板代码，并且使用 Spring Cloud 开发人员可以快速建立实现这些模式的服务与应用程序。 Spring Cloud 可以在任何分布式环境中正常工作，包括开发人员自己的笔记本电脑、裸机数据中心以及 Cloud Foundry 等托管平台。</li><li>特性： Spring Cloud 着重于为典型用例提供良好的开箱即用体验，以及覆盖其他用例的扩展机制。 <ul><li>分布式/版本化配置</li><li>服务注册和发现</li><li>路由</li><li>服务到服务的呼叫</li><li>负载均衡</li><li>断路器</li><li>全局锁</li><li>领导选举和集群状态</li><li>分布式消息传递</li></ul></li></ul>",3),zl={href:"https://spring.io/projects/spring-cloud-dataflow",target:"_blank",rel:"noopener noreferrer"},Ql=(0,n.Uk)("Spring Cloud Data Flow"),ql=(0,n.Uk)(),Nl=(0,n._)("strong",null,"【云数据流】",-1),Yl=(0,n._)("li",null,"用于 Cloud Foundry 与 Kubernetes 的基于微服务的流式处理与批处理数据。",-1),Zl=(0,n.Uk)("Spring Cloud Data Flow 提供了用于为流处理与批处理数据管道创建复杂拓扑的工具。 数据管道包含使用 "),$l={href:"https://cloud.spring.io/spring-cloud-stream",target:"_blank",rel:"noopener noreferrer"},rn=(0,n.Uk)("Spring Cloud Stream"),en=(0,n.Uk)(" 或 "),ln={href:"https://cloud.spring.io/spring-cloud-task/",target:"_blank",rel:"noopener noreferrer"},nn=(0,n.Uk)("Spring Cloud Task"),an=(0,n.Uk)(" 微服务框架构建的 "),tn={href:"https://projects.spring.io/spring-boot/",target:"_blank",rel:"noopener noreferrer"},on=(0,n.Uk)("Spring Boot"),sn=(0,n.Uk)(" 应用程序。"),pn=(0,n._)("li",null,"Spring Cloud Data Flow 支持一系列数据处理用例，从 ETL 到导入/导出、事件流与预测分析。",-1),un=(0,n.Uk)("特性： "),gn=(0,n.Uk)("Spring Cloud Data Flow 服务器使用 "),_n={href:"https://github.com/spring-cloud/spring-cloud-deployer/",target:"_blank",rel:"noopener noreferrer"},cn=(0,n.Uk)("Spring Cloud Deployer"),kn=(0,n.Uk)(" 将由Spring Cloud Stream 或 Spring Cloud Task 应用程序组成的数据管道部署到 Cloud Foundry 与 Kubernetes 等现代平台上。"),hn={href:"https://spring.io/projects/spring-security",target:"_blank",rel:"noopener noreferrer"},dn=(0,n.Uk)("Spring Security"),mn=(0,n.Uk)(),Sn=(0,n._)("strong",null,"【安全】",-1),bn=(0,n._)("ul",null,[(0,n._)("li",null,"Spring Security 是一个功能强大且高度可定制的身份验证与访问控制框架。 是用于保护基于 Spring 的应用程序的实际标准。"),(0,n._)("li",null,[(0,n.Uk)("特性： "),(0,n._)("ul",null,[(0,n._)("li",null,"全面且可扩展的身份验证与授权支持"),(0,n._)("li",null,"防御会话固定、点击劫持、跨站点请求伪造等攻击"),(0,n._)("li",null,"Servlet API 集成"),(0,n._)("li",null,"与 Spring Web MVC 的可选集成"),(0,n._)("li",null,"以及更多……")])])],-1),fn={href:"https://spring.io/projects/spring-session",target:"_blank",rel:"noopener noreferrer"},Un=(0,n.Uk)("Spring Session"),vn=(0,n.uE)(" <strong>【会话】</strong><ul><li>Spring Session 提供了用于管理用户会话信息的 API 与实现。</li><li>特性： <ul><li>Spring Session 使支持集群会话变得很简单，而不必依赖于特定于应用程序容器的解决方案。</li><li>Spring Session 还提供了透明的集成： <ul><li><code>HttpSession</code>：允许以中性的方式替换应用程序容器（即 Tomcat）中的 HttpSession， 并支持在标头中提供会话 ID 以与 RESTful API 一起使用</li><li><code>WebSocket</code>：提供了在接收WebSocket消息时保持HttpSession存活的功能</li><li><code>WebSession</code>：允许以与应用程序容器无关的方式替换Spring WebFlux的WebSession</li></ul></li></ul></li><li>模块： Spring Session 由以下模块组成： <ul><li>Spring Session Core：提供核心的 Spring Session 功能与 API</li><li>Spring Session Data Redis：提供由 Redis 支持的 SessionRepository 与 ReactiveSessionRepository 实现以及配置支持</li><li>Spring Session JDBC：提供由关系数据库支持的 SessionRepository 实现与配置支持</li><li>Spring Session Hazelcast：提供由 Hazelcast 支持的 SessionRepository 实现与配置支持</li></ul></li></ul>",3),Wn={href:"https://spring.io/projects/spring-integration",target:"_blank",rel:"noopener noreferrer"},An=(0,n.Uk)("Spring Integration"),wn=(0,n.Uk)(),Pn=(0,n._)("strong",null,"【集成】",-1),Dn=(0,n.Uk)("扩展 Spring 编程模型以支持著名的 "),jn={href:"http://www.eaipatterns.com/",target:"_blank",rel:"noopener noreferrer"},Jn=(0,n.Uk)("企业集成模式(Enterprise Integration Patterns)"),Mn=(0,n.Uk)("。 Spring Integration 支持在基于 Spring 的应用程序中进行轻量级消息传递，并通过声明性适配器支持与外部系统的集成。 这些适配器提供了 Spring 对远程、消息传递与调度支持的更高级别的抽象。 Spring Integration 的主要目标是为构建企业集成解决方案提供一个简单的模型，同时保持关注点的分离，这对于生成可维护、可测试的代码至关重要。"),Cn=(0,n._)("li",null,[(0,n.Uk)("简介： "),(0,n._)("ul",null,[(0,n._)("li",null,"使用 Spring 框架鼓励开发人员使用接口进行编码，并使用依赖注入(DI)为普通旧 Java 对象(POJO)提供执行任务所需的依赖项。 Spring Integration 使这一概念更进一步，其中 POJO 使用消息传递范例连接在一起，并且各个组件可能不知道应用程序中的其他组件。 通过组装细粒度的可重用组件以形成更高级别的功能来构建这样的应用程序。 通过精心设计，这些流程可以模块化，并且可以在更高的层次上重复使用。"),(0,n._)("li",null,"除了将细粒度的组件连接在一起之外，Spring Integration 还提供了多种通道适配器与网关来与外部系统进行通信。 通道适配器用于单向集成（发送或接收）。 网关用于请求/答复方案（入站或出站）。"),(0,n._)("li",null,"Spring Cloud Stream 项目基于 Spring Integration，其中 Spring Integration 用作消息驱动的微服务的引擎。")])],-1),yn=(0,n.uE)('<details class="custom-container details"><summary>Spring Integration 特性</summary><ul><li>特性： <ul><li>实现大多数企业集成模式 <ul><li>端点</li><li>渠道(点对点与发布/订阅)</li><li>聚合器</li><li>过滤器</li><li>变压器</li><li>控制总线</li></ul></li><li>与外部系统集成 <ul><li>ReST / HTTP</li><li>FTP / SFTP</li><li>推特</li><li>WebServices (SOAP 与 ReST)</li><li>TCP / UDP</li><li>JMS</li><li>RabbitMQ</li><li>电子邮件</li></ul></li><li>该框架具有广泛的 JMX 支持</li><li>将框架组件公开为 MBean</li><li>适配器从 MBean 获取属性、调用操作、发送/接收通知</li></ul></li></ul></details>',1),Tn={href:"https://spring.io/projects/spring-hateoas",target:"_blank",rel:"noopener noreferrer"},En=(0,n.Uk)("Spring HATEOAS"),On=(0,n._)("s",null,"超级赛亚人",-1),xn=(0,n._)("abbr",{title:"HATEOAS - Hypermedia as the engine of application state"},[(0,n._)("strong",null,"【超媒体作为应用程序状态的引擎】")],-1),In=(0,n._)("ul",null,[(0,n._)("li",null,"当使用 Spring 特别是 Spring MVC 时，Spring HATEOAS 提供了一些 API 来简化创建遵循 HATEOAS 原理的 REST 表示形式的 API。 试图解决的核心问题是链接创建与表示组装。"),(0,n._)("li",null,[(0,n.Uk)("特性： "),(0,n._)("ul",null,[(0,n._)("li",null,"链接、资源表示模型的模型类"),(0,n._)("li",null,"链接构建器 API，用于创建指向 Spring MVC 控制器方法的链接"),(0,n._)("li",null,"支持 HAL 等超媒体格式")])])],-1),Rn={href:"https://spring.io/projects/spring-restdocs",target:"_blank",rel:"noopener noreferrer"},Hn=(0,n.Uk)("Spring REST Docs"),Ln=(0,n.Uk)(),Fn=(0,n._)("strong",null,"REST 文档",-1),Vn=(0,n.Uk)("Spring REST Docs 可帮助记录 "),Bn={href:"https://www.zhihu.com/question/28557115",target:"_blank",rel:"noopener noreferrer"},Xn=(0,n.Uk)("RESTful"),Kn=(0,n.Uk)(" 服务。"),Gn=(0,n.Uk)("Spring REST Docs 结合了用 "),zn={href:"http://asciidoctor.org/",target:"_blank",rel:"noopener noreferrer"},Qn=(0,n.Uk)("Asciidoctor"),qn=(0,n.Uk)(" 编写的手写文档与 "),Nn={href:"https://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle#spring-mvc-test-framework",target:"_blank",rel:"noopener noreferrer"},Yn=(0,n.Uk)("Spring MVC Test"),Zn=(0,n.Uk)(" 生成的自动生成的代码片段。 这种方式可以从诸如 "),$n={href:"http://swagger.io/",target:"_blank",rel:"noopener noreferrer"},ra=(0,n.Uk)("Swagger"),ea=(0,n.Uk)(" 等工具生成的文档的限制中解放出来。"),la=(0,n._)("li",null,"Spring REST Docs 可以帮助生成准确、简洁且结构合理的文档。 然后，该文档可让用户以最少的麻烦获得他们所需的信息。",-1),na={href:"https://spring.io/projects/spring-batch",target:"_blank",rel:"noopener noreferrer"},aa=(0,n.Uk)("Spring Batch"),ia=(0,n.Uk)(),ta=(0,n._)("strong",null,"【批处理】",-1),oa=(0,n._)("li",null,"一个轻量级的，全面的批处理框架，旨在支持开发对企业系统的日常运行至关重要的强大的批处理应用程序。",-1),sa=(0,n._)("li",null,"Spring Batch 提供了可复用的功能，这些功能对于处理大量记录至关重要， 包括日志记录/跟踪、事务管理、作业处理统计信息、作业重启、跳过与资源管理。 还提供了更高级的技术服务和功能，这些功能和功能将通过优化和分区技术来实现极高容量和高性能的批处理作业。 简单以及复杂的大批量批处理作业都能以高度可扩展的方式利用框架来处理大量信息。",-1),pa=(0,n.Uk)("特性： "),ua=(0,n._)("li",null,"事务管理",-1),ga=(0,n._)("li",null,"基于区块的处理",-1),_a=(0,n._)("li",null,"声明式 I/O",-1),ca=(0,n._)("li",null,"启动/停止/重启",-1),ka=(0,n._)("li",null,"重试/跳过",-1),ha=(0,n.Uk)("基于 Web 的管理界面（"),da={href:"https://cloud.spring.io/spring-cloud-dataflow",target:"_blank",rel:"noopener noreferrer"},ma=(0,n.Uk)("Spring Cloud Data Flow"),Sa=(0,n.Uk)("）"),ba={href:"https://spring.io/projects/spring-amqp",target:"_blank",rel:"noopener noreferrer"},fa=(0,n.Uk)("Spring AMQP"),Ua=(0,n._)("abbr",{title:"AMQP - Advanced Message Queuing Protocol"},[(0,n._)("strong",null,"【高级消息队列协议】")],-1),va=(0,n.Uk)("Spring AMQP 项目将 Spring 的核心概念应用于基于 AMQP 的消息传递解决方案的开发。 提供了一个“模板”作为用于发送和接收消息的高级抽象。 还通过“监听器容器”为消息驱动的 "),Wa={title:"Plain Old Java Object"},Aa={href:"https://zhuanlan.zhihu.com/p/49026165",target:"_blank",rel:"noopener noreferrer"},wa=(0,n.Uk)("POJO"),Pa=(0,n.Uk)(" 提供支持。 这些库促进了 AMQP 资源的管理，同时促进了对依赖项注入和声明性配置的使用。 在所有这些情况下，将看到与 Spring Framework 中的 JMS 支持相似的地方。"),Da=(0,n._)("li",null,"该项目包括两个部分；spring-amqp 是基础抽象、spring-rabbit 是 RabbitMQ 实现。",-1),ja=(0,n._)("li",null,[(0,n.Uk)("特性： "),(0,n._)("ul",null,[(0,n._)("li",null,"侦听器容器，用于异步处理入站消息"),(0,n._)("li",null,"用于发送和接收消息的 RabbitTemplate"),(0,n._)("li",null,"RabbitAdmin 用于自动声明队列、交换与绑定")])],-1),Ja={href:"https://spring.io/projects/spring-android",target:"_blank",rel:"noopener noreferrer"},Ma=(0,n.Uk)("Spring for Android"),Ca=(0,n._)("ul",null,[(0,n._)("li",null,"Spring for Android 是一个框架，旨在提供用于 Android 应用程序的 Spring 项目系列的组件。 与所有 Spring 项目一样，Android 的真正强大之处在于它的扩展容易程度。"),(0,n._)("li",null,[(0,n.Uk)("特性： "),(0,n._)("ul",null,[(0,n._)("li",null,"适用于 Android 的 REST 客户端"),(0,n._)("li",null,"身份验证支持访问安全 API")])])],-1),ya={href:"https://spring.io/projects/spring-credhub",target:"_blank",rel:"noopener noreferrer"},Ta=(0,n.Uk)("Spring CredHub"),Ea=(0,n.Uk)("Spring CredHub 提供客户端支持，用于从 "),Oa={href:"https://www.cloudfoundry.org/",target:"_blank",rel:"noopener noreferrer"},xa=(0,n.Uk)("Cloud Foundry"),Ia=(0,n.Uk)(" 平台中运行的 "),Ra={href:"https://github.com/cloudfoundry-incubator/credhub",target:"_blank",rel:"noopener noreferrer"},Ha=(0,n.Uk)("CredHub"),La=(0,n.Uk)(" 服务器存储、检索与删除凭据。"),Fa={href:"https://github.com/cloudfoundry-incubator/credhub",target:"_blank",rel:"noopener noreferrer"},Va=(0,n.Uk)("CredHub"),Ba=(0,n.Uk)(" 提供了一个 "),Xa={href:"https://credhub-api.cfapps.io/",target:"_blank",rel:"noopener noreferrer"},Ka=(0,n.Uk)("API"),Ga=(0,n.Uk)("， 可以安全地存储、生成、检索与删除各种类型的凭据。 Spring CredHub 为 CredHub API 提供了 Java 绑定，可轻松将 Spring 应用程序与 CredHub 集成。"),za={href:"https://spring.io/projects/spring-flo",target:"_blank",rel:"noopener noreferrer"},Qa=(0,n.Uk)("Spring Flo"),qa=(0,n.Uk)("Spring Flo 是一个 JavaScript 库，为管道与简单图形提供了一个基本的可嵌入 HTML5 可视生成器。 该库用作 "),Na={href:"https://cloud.spring.io/spring-cloud-dataflow/",target:"_blank",rel:"noopener noreferrer"},Ya=(0,n.Uk)("Spring Cloud Data Flow"),Za=(0,n.Uk)(" 中流构建器的基础。"),$a=(0,n._)("li",null,"Flo 包含集成流设计器的所有基本元素，例如连接器、控制节点、调色板、状态转换与图形拓扑 ——重要的是，它具有命令行界面、DSL 支持与设计用于创建与查看全面工作流程的图形画布。",-1),ri=(0,n._)("li",null,[(0,n.Uk)("特性： "),(0,n._)("ul",null,[(0,n._)("li",null,"使用 DSL 或图形画布创建、管理与监视流管道，或者两者兼用"),(0,n._)("li",null,"通过具有代码提示与自动补全功能的 DSL 编写管道"),(0,n._)("li",null,"看到分布式部署中模块的直观表示"),(0,n._)("li",null,"使用 GUI 中的自动调整与网格布局功能可以更简单、更高效地组织管道")])],-1),ei={href:"https://spring.io/projects/spring-kafka",target:"_blank",rel:"noopener noreferrer"},li=(0,n.Uk)("Spring for Apache Kafka"),ni=(0,n.Uk)("用于 Apache Kafka 的 Spring（spring-kafka）项目将 Spring 的核心概念应用到基于 Kafka 的消息解决方案的开发中。 提供了一个“模板”作为发送消息的高级抽象。 还通过 "),ai=(0,n._)("code",null,"@KafkaListener",-1),ii=(0,n.Uk)(" 批注与“监听器容器”为消息驱动的 "),ti={title:"Plain Old Java Object"},oi={href:"https://zhuanlan.zhihu.com/p/49026165",target:"_blank",rel:"noopener noreferrer"},si=(0,n.Uk)("POJO"),pi=(0,n.Uk)(" 提供支持。 这些库促进了依赖注入和声明式的使用。 在所有这些情况下，将看到与 Spring 框架中的 JMS 支持以及 Spring AMQP 中的 RabbitMQ 支持相似。"),ui=(0,n.uE)("<li>特性： <ul><li><code>KafkaTemplate</code></li><li><code>KafkaMessageListenerContainer</code></li><li><code>@KafkaListener</code></li><li><code>KafkaTransactionManager</code></li><li>带有嵌入式 kafka 服务器的 <code>spring-kafka-test</code> jar</li></ul></li>",1),gi={href:"https://spring.io/projects/spring-ldap",target:"_blank",rel:"noopener noreferrer"},_i=(0,n.Uk)("Spring LDAP"),ci={title:"LDAP - Light Directory Access Portocol"},ki={href:"https://www.cnblogs.com/wilburxu/p/9174353.html",target:"_blank",rel:"noopener noreferrer"},hi=(0,n._)("strong",null,"【轻量级目录访问协议】",-1),di=(0,n._)("ul",null,[(0,n._)("li",null,"Spring LDAP 是一个用于简化 Java 中 LDAP 编程的库，其建立原理与 Spring Jdbc 相同。"),(0,n._)("li",null,"LdapTemplate 类封装了传统 LDAP 编程中涉及的所有管道工作，例如创建、遍历命名枚举、处理异常与清理资源。 这使程序员可以处理重要的事情——在何处查找数据（DN 与过滤器）以及如何处理数据（与域对象进行映射、绑定、修改、取消绑定等）， 正如 JdbcTemplate 将程序员从实际的 SQL 中解放出来一样，以及数据如何映射到域模型。"),(0,n._)("li",null,"除此之外，Spring LDAP 还提供了从命名异常到未检查的异常层次结构的异常转换，以及用于处理过滤器，LDAP 路径与属性的多个实用程序。")],-1),mi={href:"https://spring.io/projects/spring-mobile",target:"_blank",rel:"noopener noreferrer"},Si=(0,n.Uk)("Spring Mobile"),bi=(0,n.Uk)(),fi=(0,n._)("strong",null,"【移动设备】",-1),Ui=(0,n._)("ul",null,[(0,n._)("li",null,"Spring Mobile 是一个框架，该框架提供的功能可以检测向 Spring 网站发出请求的设备的类型，并基于该设备提供其他视图。 像所有 Spring 项目一样，Spring Mobile 的真正强大之处在于它可以很容易地进行扩展。"),(0,n._)("li",null,[(0,n.Uk)("特性： "),(0,n._)("ul",null,[(0,n._)("li",null,"设备解析器抽象，用于移动设备与平板设备的服务器端检测"),(0,n._)("li",null,"网站首选项管理，允许用户指示自己是否喜欢“正常”、“移动”或“平板电脑”体验"),(0,n._)("li",null,"站点切换器，能够根据用户的设备与可选的站点首选项，将用户切换到最适合的网站，无论是手机，平板电脑还是普通网站"),(0,n._)("li",null,"设备感知视图管理，用于组织与管理特定设备的不同视图")])])],-1),vi={href:"https://projects.spring.io/spring-roo",target:"_blank",rel:"noopener noreferrer"},Wi=(0,n.Uk)("Spring Roo"),Ai=(0,n._)("ul",null,[(0,n._)("li",null,"Spring Roo 是一个轻量级的开发人员工具，可快速轻松地交付即时结果。 最重要的是，可以 100％ 用 Java 编写代码，并可以重用所有现有的 Java 知识、技能与经验。")],-1),wi={href:"https://spring.io/projects/spring-shell",target:"_blank",rel:"noopener noreferrer"},Pi=(0,n.Uk)("Spring Shell"),Di=(0,n.uE)(" <strong>【命令行】</strong><ul><li>Spring Shell 项目的用户可以通过依赖于 Spring Shell jar 并添加自己的命令（在 Spring 容器中作为方法来提供） 来轻松构建功能齐全的 shell（又名命令行）应用程序。 创建命令行应用程序可能非常有用，例如：与项目的 REST API 进行交互，或使用本地文件内容。</li><li>特性： <ul><li>一个简单的注释驱动的编程模型，可以贡献自定义命令</li><li>使用 Spring Boot 自动配置功能作为命令插件策略的基础</li><li>制表符完备，着色与脚本执行</li><li>自定义命令提示符，shell 历史记录文件名，结果和错误处理</li><li>根据域特定条件动态启用命令</li><li>与容器验证 API 集成</li><li>已经内置的命令，例如清晰的屏幕、漂亮的帮助、退出</li><li>ASCII 艺术表、具有格式、对齐方式、花式边框等</li></ul></li></ul>",3),ji={href:"https://spring.io/projects/spring-statemachine",target:"_blank",rel:"noopener noreferrer"},Ji=(0,n.Uk)("Spring Statemachine"),Mi=(0,n.uE)(" <strong>【状态机】</strong><ul><li>Spring Statemachine 是一个框架，供应用程序开发人员在 Spring 应用程序中使用状态机概念。</li><li>状态机之所以强大，是因为始终保证行为是一致的，因此调试起来相对容易。 这是因为在启动机器时，操作规则是一成不变的。 这个想法是，应用程序可能以有限数量的状态存在，并且某些预定义的触发器可以将应用程序从一种状态转移到另一种状态。 这样的触发器可以基于事件或计时器。</li><li>在应用程序外部定义高级逻辑，然后依靠状态机来管理状态要容易得多。 可以通过发送事件，侦听更改或仅请求当前状态来与状态机进行交互。</li><li>特性： <ul><li>易于使用的单层状态机，用于简单的用例。</li><li>分层状态机结构可简化复杂的状态配置。</li><li>状态机区域提供甚至更复杂的状态配置。</li><li>触发器、过渡、防护与操作的使用。</li><li>键入安全配置适配器。</li><li>用于在 Spring 应用上下文之外使用的易于实例化的建造者模式</li><li>常用案例食谱</li><li>基于 Zookeeper 的分布式状态机</li><li>状态机事件监听器。</li><li>UML Eclipse Papyrus 建模。</li><li>将机器配置存储在持久性存储中。</li><li>Spring IOC 集成，将 Bean 与状态机关联。</li></ul></li></ul>",3),Ci={href:"https://spring.io/projects/spring-vault",target:"_blank",rel:"noopener noreferrer"},yi=(0,n.Uk)("Spring Vault"),Ti=(0,n.Uk)(),Ei=(0,n._)("strong",null,"【保险库】",-1),Oi=(0,n._)("ul",null,[(0,n._)("li",null,"Spring Vault 为访问、存储与回收机密提供了熟悉的 Spring 抽象与客户端支持。 为与 Vault 交互提供了低层和高层的抽象，将用户从基础设施的关注点中解放出来。"),(0,n._)("li",null,"使用 HashiCorp 的保险柜，可以在中心位置管理所有环境中应用程序的外部秘密数据。 Vault 可以管理静态与动态机密，例如应用程序数据，远程应用程序/资源的用户名/密码，并为外部服务 （例如MySQL、PostgreSQL、Apache Cassandra、Consul、AWS等）提供凭据。")],-1),xi={class:"custom-container details"},Ii=(0,n._)("summary",null,"Spring Vault 特性",-1),Ri=(0,n.Uk)("特性： "),Hi=(0,n._)("li",null,[(0,n.Uk)("使用基于 Java 的 "),(0,n._)("code",null,"@Configuration"),(0,n.Uk)(" 类的 Spring 配置支持。")],-1),Li=(0,n.Uk)("VaultTemplate 帮助程序类，可提高执行常见 Mongo 操作的效率。 包括文档与 "),Fi={title:"Plain Old Java Object"},Vi={href:"https://zhuanlan.zhihu.com/p/49026165",target:"_blank",rel:"noopener noreferrer"},Bi=(0,n.Uk)("POJO"),Xi=(0,n.Uk)(" 之间的集成对象映射。"),Ki=(0,n.uE)("<li>支持的身份验证机制： <ul><li>Token</li><li>AppRole</li><li>AWS-EC2</li><li>AWS-IAM</li><li>Azure MSI</li><li>Certificates (PKI)</li><li>Cubbyhole</li><li>GCP-GCE</li><li>GCP-IAM</li><li>Kubernetes</li><li>Pivotal CloudFoundry</li></ul></li><li>基于注释的 <code>@VaultPropertySource</code> 集成</li><li>支持可再生和循环的机密</li><li>功能丰富的对象映射与 Spring 的转换服务集成</li><li>与 Spring 转换服务集成的丰富对象映射特性</li><li>存储库接口的自动实现，包括对自定义查询方法的支持。</li>",6),Gi={href:"https://spring.io/projects/spring-webflow",target:"_blank",rel:"noopener noreferrer"},zi=(0,n.Uk)("Spring Web Flow"),Qi=(0,n.uE)(" <strong>【Web 流】</strong><ul><li>Spring Web Flow 建立在 Spring MVC 之上，并允许实现 Web 应用程序的“流”。 流封装了指导用户完成某些业务任务的一系列步骤。 跨越多个 HTTP 请求、具有状态、处理事务数据、可重用、并且本质上可以是动态的并且可以长期运行。</li><li>Spring Web Flow 的最佳应用是具有受控导航的有状态 Web 应用程序，如办理航班登记、申请贷款、购物车结帐，甚至向表单添加确认步骤。 这些场景的共同之处在于以下一个或多个特征： <ul><li>有一个明确的起点和终点。</li><li>用户必须按特定顺序浏览一组屏幕。</li><li>直到最后一步，更改才能最终确定。</li><li>完成后，就不能意外重复一个事务。</li></ul></li><li>Spring Web Flow 提供了一种声明性的流程定义语言，用于在更高的抽象级别上创作流程。 允许将其集成到各种应用程序中，而无需进行任何更改（对流编程模型）（包括 Spring MVC、JSF 甚至 Portlet Web 应用程序）。 以下是在有导航要求的有状态 Web 应用程序中观察到的常见问题： <ul><li>可视化流程非常困难。</li><li>该应用程序具有许多访问 HTTP 会话的代码。</li><li>实施受控导航很重要，但不可能。</li><li>适当的浏览器后退按钮支持似乎无法实现。</li><li>浏览器和服务器与“返回”按钮的使用不同步。</li><li>多个浏览器选项卡导致 HTTP 会话数据并发问题。</li><li>Spring Web Flow 提供了上述问题的解决方案。</li></ul></li></ul>",3),qi={href:"https://spring.io/projects/spring-ws",target:"_blank",rel:"noopener noreferrer"},Ni=(0,n.Uk)("Spring WebServices"),Yi=(0,n.Uk)(),Zi=(0,n._)("strong",null,"【Web 服务】",-1),$i=(0,n.Uk)("Spring Web Services（Spring-WS）是 Spring 社区的产品，致力于创建文档驱动的 Web 服务。 Spring Web Services 旨在促进合同优先 "),rt={href:"https://www.runoob.com/soap/soap-intro.html",target:"_blank",rel:"noopener noreferrer"},et=(0,n.Uk)("SOAP"),lt=(0,n.Uk)(" 服务的开发，从而允许使用多种处理 XML 有效负载的方式之一来创建灵活的 Web 服务。 该产品基于 Spring 本身，这意味着可以将诸如依赖项注入之类的 Spring 概念用作 Web 服务的组成部分。"),nt=(0,n.Uk)("人们使用 Spring-WS 的原因有很多，但是大多数人在找到了遵循 Web 服务最佳实践所缺乏的替代 "),at={href:"https://www.runoob.com/soap/soap-intro.html",target:"_blank",rel:"noopener noreferrer"},it=(0,n.Uk)("SOAP"),tt=(0,n.Uk)(" 堆栈之后才开始使用它。"),ot=(0,n.uE)("<li>特性： <ul><li>使最佳实践变得容易： Spring Web Services 使实施最佳实践更加容易。 这包括诸如 WS-I 基本概要文件，合同优先开发之类的实践，以及合同与实施之间的松散耦合。</li><li>强大的映射：可以根据消息有效负载，SOAP Action 标头或 XPath 表达式，将传入的 XML 请求分发到任何对象。</li><li>XML API 支持： 可以使用标准的 JAXP API（例如 DOM、SAX 与 StAX）处理传入的 XML 消息，也可以使用 JDOM、dom4j、XOM 甚至是编组技术来处理。</li><li>灵活的 XML 编组： Spring Web Services 发行版中的对象/XML 映射模块支持 JAXB 1和2、Castor、XMLBeans、JiBX 与 XStream。 并且由于它是一个单独的模块，因此也可以在非 Web 服务代码中使用它。</li><li>重用 Spring 专业知识： Spring-WS 使用 Spring 应用程序上下文进行所有配置，这将有助于 Spring 开发人员快速，良好地掌握最新信息。 而且，Spring-WS 的体系结构类似于 Spring-MVC 的体系结构。</li><li>支持 WS-Security： WS-Security 允​​许对 SOAP 消息进行签名、加密与解密，或针对它们进行身份验证。</li><li>与 Acegi Security 集成： Spring Web Services 的 WS-Security 实现提供与 Spring Security 的集成。 这意味着也可以将现有配置用于 SOAP 服务。</li><li>由Maven构建：可以帮助在自己的基于 Maven 的项目中有效地重用 Spring Web Services 构件。</li><li>Apache许可证：可以放心地在项目中使用 Spring-WS。</li></ul></li>",1),st={render:function(r,e){const l=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[s,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",p,[u,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",g,[_,(0,n.Wm)(l)])])]),c,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",k,[h,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",d,[m,(0,n.Wm)(l)])])]),S,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",b,[f,(0,n.Wm)(l)]),U]),(0,n._)("li",null,[(0,n._)("a",v,[W,(0,n.Wm)(l)]),A])]),w,P,(0,n._)("ol",null,[(0,n._)("li",null,[(0,n._)("p",null,[D,(0,n._)("a",j,[J,(0,n.Wm)(l)]),M]),C]),y,T]),E,O,(0,n._)("div",x,[I,R,(0,n._)("p",null,[(0,n._)("a",H,[L,(0,n.Wm)(l)])])]),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",F,[V,(0,n.Wm)(l)])])]),B,(0,n._)("p",null,[X,(0,n._)("a",K,[G,(0,n.Wm)(l)])]),z,(0,n._)("div",Q,[q,N,(0,n._)("p",null,[(0,n._)("a",Y,[Z,(0,n.Wm)(l)])])]),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",$,[rr,(0,n.Wm)(l)])])]),er,(0,n._)("div",lr,[nr,ar,(0,n._)("p",null,[(0,n._)("a",ir,[tr,(0,n.Wm)(l)])])]),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",or,[sr,(0,n.Wm)(l)])])]),pr,(0,n._)("ol",null,[(0,n._)("li",null,[(0,n._)("p",null,[ur,(0,n._)("a",gr,[_r,(0,n.Wm)(l)]),cr]),kr]),(0,n._)("li",null,[hr,(0,n._)("blockquote",null,[(0,n._)("p",null,[dr,(0,n._)("a",mr,[Sr,(0,n.Wm)(l)])])]),br,fr,Ur,vr,Wr,Ar])]),wr,(0,n._)("div",Pr,[Dr,jr,(0,n._)("p",null,[(0,n._)("a",Jr,[Mr,(0,n.Wm)(l)])])]),Cr,(0,n._)("div",yr,[Tr,Er,(0,n._)("p",null,[(0,n._)("a",Or,[xr,(0,n.Wm)(l)])])]),(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",Ir,[Rr,(0,n.Wm)(l)]),Hr]),(0,n._)("li",null,[(0,n._)("a",Lr,[Fr,(0,n.Wm)(l)]),Vr,Br,(0,n._)("ul",null,[Xr,Kr,(0,n._)("li",null,[Gr,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",zr,[Qr,(0,n.Wm)(l)]),qr]),(0,n._)("li",null,[(0,n._)("a",Nr,[Yr,(0,n.Wm)(l)]),Zr,$r,re]),(0,n._)("li",null,[(0,n._)("a",ee,[le,(0,n.Wm)(l)]),ne]),(0,n._)("li",null,[(0,n._)("a",ae,[ie,(0,n.Wm)(l)]),te,(0,n._)("a",oe,[se,(0,n.Wm)(l)]),pe]),(0,n._)("li",null,[(0,n._)("a",ue,[ge,(0,n.Wm)(l)]),_e]),(0,n._)("li",null,[(0,n._)("a",ce,[ke,(0,n.Wm)(l)]),he])])])])]),(0,n._)("li",null,[(0,n._)("a",de,[me,(0,n.Wm)(l)]),Se,(0,n._)("details",be,[fe,(0,n._)("ul",null,[(0,n._)("li",null,[Ue,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",ve,[We,(0,n.Wm)(l)]),Ae]),(0,n._)("li",null,[(0,n._)("a",we,[Pe,(0,n.Wm)(l)]),De]),(0,n._)("li",null,[(0,n._)("a",je,[Je,(0,n.Wm)(l)]),Me]),(0,n._)("li",null,[(0,n._)("a",Ce,[ye,(0,n.Wm)(l)]),Te]),(0,n._)("li",null,[(0,n._)("a",Ee,[Oe,(0,n.Wm)(l)]),xe,Ie,Re]),(0,n._)("li",null,[(0,n._)("a",He,[Le,(0,n.Wm)(l)]),Fe,(0,n._)("a",Ve,[Be,(0,n.Wm)(l)]),Xe]),(0,n._)("li",null,[(0,n._)("a",Ke,[Ge,(0,n.Wm)(l)]),ze]),(0,n._)("li",null,[(0,n._)("a",Qe,[qe,(0,n.Wm)(l)]),Ne]),(0,n._)("li",null,[(0,n._)("a",Ye,[Ze,(0,n.Wm)(l)]),$e]),(0,n._)("li",null,[(0,n._)("a",rl,[el,(0,n.Wm)(l)]),ll]),(0,n._)("li",null,[(0,n._)("a",nl,[al,(0,n.Wm)(l)]),il]),(0,n._)("li",null,[(0,n._)("a",tl,[ol,(0,n.Wm)(l)]),sl])])]),(0,n._)("li",null,[pl,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n._)("a",ul,[gl,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",_l,[cl,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",kl,[hl,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",dl,[ml,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",Sl,[bl,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",fl,[Ul,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",vl,[Wl,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",Al,[wl,(0,n.Wm)(l)])]),(0,n._)("li",null,[(0,n._)("a",Pl,[Dl,(0,n.Wm)(l)]),jl]),(0,n._)("li",null,[(0,n._)("a",Jl,[Ml,(0,n.Wm)(l)]),Cl]),(0,n._)("li",null,[(0,n._)("a",yl,[Tl,(0,n.Wm)(l)]),El]),(0,n._)("li",null,[(0,n._)("a",Ol,[xl,(0,n.Wm)(l)]),Il]),(0,n._)("li",null,[(0,n._)("a",Rl,[Hl,(0,n.Wm)(l)]),Ll,(0,n._)("a",Fl,[Vl,(0,n.Wm)(l)]),Bl])])])])])]),(0,n._)("li",null,[(0,n._)("a",Xl,[Kl,(0,n.Wm)(l)]),Gl]),(0,n._)("li",null,[(0,n._)("a",zl,[Ql,(0,n.Wm)(l)]),ql,Nl,(0,n._)("ul",null,[Yl,(0,n._)("li",null,[Zl,(0,n._)("a",$l,[rn,(0,n.Wm)(l)]),en,(0,n._)("a",ln,[nn,(0,n.Wm)(l)]),an,(0,n._)("a",tn,[on,(0,n.Wm)(l)]),sn]),pn,(0,n._)("li",null,[un,(0,n._)("ul",null,[(0,n._)("li",null,[gn,(0,n._)("a",_n,[cn,(0,n.Wm)(l)]),kn])])])])]),(0,n._)("li",null,[(0,n._)("a",hn,[dn,(0,n.Wm)(l)]),mn,Sn,bn]),(0,n._)("li",null,[(0,n._)("a",fn,[Un,(0,n.Wm)(l)]),vn]),(0,n._)("li",null,[(0,n._)("a",Wn,[An,(0,n.Wm)(l)]),wn,Pn,(0,n._)("ul",null,[(0,n._)("li",null,[Dn,(0,n._)("a",jn,[Jn,(0,n.Wm)(l)]),Mn]),Cn]),yn]),(0,n._)("li",null,[(0,n._)("a",Tn,[En,(0,n.Wm)(l)]),On,xn,In]),(0,n._)("li",null,[(0,n._)("a",Rn,[Hn,(0,n.Wm)(l)]),Ln,Fn,(0,n._)("ul",null,[(0,n._)("li",null,[Vn,(0,n._)("a",Bn,[Xn,(0,n.Wm)(l)]),Kn]),(0,n._)("li",null,[Gn,(0,n._)("a",zn,[Qn,(0,n.Wm)(l)]),qn,(0,n._)("a",Nn,[Yn,(0,n.Wm)(l)]),Zn,(0,n._)("a",$n,[ra,(0,n.Wm)(l)]),ea]),la])]),(0,n._)("li",null,[(0,n._)("a",na,[aa,(0,n.Wm)(l)]),ia,ta,(0,n._)("ul",null,[oa,sa,(0,n._)("li",null,[pa,(0,n._)("ul",null,[ua,ga,_a,ca,ka,(0,n._)("li",null,[ha,(0,n._)("a",da,[ma,(0,n.Wm)(l)]),Sa])])])])]),(0,n._)("li",null,[(0,n._)("a",ba,[fa,(0,n.Wm)(l)]),Ua,(0,n._)("ul",null,[(0,n._)("li",null,[va,(0,n._)("abbr",Wa,[(0,n._)("a",Aa,[wa,(0,n.Wm)(l)])]),Pa]),Da,ja])]),(0,n._)("li",null,[(0,n._)("a",Ja,[Ma,(0,n.Wm)(l)]),Ca]),(0,n._)("li",null,[(0,n._)("a",ya,[Ta,(0,n.Wm)(l)]),(0,n._)("ul",null,[(0,n._)("li",null,[Ea,(0,n._)("a",Oa,[xa,(0,n.Wm)(l)]),Ia,(0,n._)("a",Ra,[Ha,(0,n.Wm)(l)]),La]),(0,n._)("li",null,[(0,n._)("a",Fa,[Va,(0,n.Wm)(l)]),Ba,(0,n._)("a",Xa,[Ka,(0,n.Wm)(l)]),Ga])])]),(0,n._)("li",null,[(0,n._)("a",za,[Qa,(0,n.Wm)(l)]),(0,n._)("ul",null,[(0,n._)("li",null,[qa,(0,n._)("a",Na,[Ya,(0,n.Wm)(l)]),Za]),$a,ri])]),(0,n._)("li",null,[(0,n._)("a",ei,[li,(0,n.Wm)(l)]),(0,n._)("ul",null,[(0,n._)("li",null,[ni,ai,ii,(0,n._)("abbr",ti,[(0,n._)("a",oi,[si,(0,n.Wm)(l)])]),pi]),ui])]),(0,n._)("li",null,[(0,n._)("a",gi,[_i,(0,n.Wm)(l)]),(0,n._)("abbr",ci,[(0,n._)("a",ki,[hi,(0,n.Wm)(l)])]),di]),(0,n._)("li",null,[(0,n._)("a",mi,[Si,(0,n.Wm)(l)]),bi,fi,Ui]),(0,n._)("li",null,[(0,n._)("a",vi,[Wi,(0,n.Wm)(l)]),Ai]),(0,n._)("li",null,[(0,n._)("a",wi,[Pi,(0,n.Wm)(l)]),Di]),(0,n._)("li",null,[(0,n._)("a",ji,[Ji,(0,n.Wm)(l)]),Mi]),(0,n._)("li",null,[(0,n._)("a",Ci,[yi,(0,n.Wm)(l)]),Ti,Ei,Oi,(0,n._)("details",xi,[Ii,(0,n._)("ul",null,[(0,n._)("li",null,[Ri,(0,n._)("ul",null,[Hi,(0,n._)("li",null,[Li,(0,n._)("abbr",Fi,[(0,n._)("a",Vi,[Bi,(0,n.Wm)(l)])]),Xi]),Ki])])])])]),(0,n._)("li",null,[(0,n._)("a",Gi,[zi,(0,n.Wm)(l)]),Qi]),(0,n._)("li",null,[(0,n._)("a",qi,[Ni,(0,n.Wm)(l)]),Yi,Zi,(0,n._)("ul",null,[(0,n._)("li",null,[$i,(0,n._)("a",rt,[et,(0,n.Wm)(l)]),lt]),(0,n._)("li",null,[nt,(0,n._)("a",at,[it,(0,n.Wm)(l)]),tt]),ot])])])],64)}}},7355:(r,e,l)=>{r.exports=l.p+"assets/img/01.09f4d18f.jpg"},4426:(r,e,l)=>{r.exports=l.p+"assets/img/02.24a588bb.jpg"},5098:(r,e,l)=>{r.exports=l.p+"assets/img/03.fe04cd2b.jpg"},8693:(r,e,l)=>{r.exports=l.p+"assets/img/gradle-proxy.b45dbaa2.jpg"}}]);